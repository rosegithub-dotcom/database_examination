1
CREATE TABLE employees(
  id INT PRIMARY KEY,
  name VARCHAR(255),
  salary DECIMAL(10,2),
  department_id INT,
  hire_date DATE); -- Corrected hire_date spelling

CREATE TABLE departments(
  id INT PRIMARY KEY,
  name VARCHAR(255));
  
INSERT INTO departments(id, name)
VALUES
      (1, 'Engineering'), -- Added comma to separate values
      (2, 'Sales'),       -- Added comma to separate values
      (3, 'Marketing'),   -- Added comma to separate values
      (4, 'HR');          -- Added comma to separate values
  
INSERT INTO employees(id, name, salary, department_id, hire_date)
VALUES
      (1, 'Alice', 60000.00, 1, '2020-01-01'),
      (2, 'Bob', 70000.00, 1, '2020-01-15'),
      (3, 'Charlie', 80000.00, 2, '2020-02-01'),
      (4, 'Dave', 90000.00, 3, '2020-02-15'),
      (5, 'Eve', 100000.00, 4, '2020-03-01'); -- Added comma to separate values

1(a) 
SELECT d.name AS department_name, e.name AS employee_name, e.salary
FROM departments d
INNER JOIN employees e ON d.id = e.department_id
INNER JOIN (
    SELECT department_id, MAX(salary) AS max_salary
    FROM employees
    GROUP BY department_id
) max_salaries ON e.department_id = max_salaries.department_id AND e.salary = max_salaries.max_salary;

1(b)
SELECT d.name AS department_name, e.name AS employee_name, e.hire_date
FROM departments d
INNER JOIN employees e ON d.id = e.department_id
INNER JOIN (
    SELECT department_id, MIN(hire_date) AS oldest_hire_date
    FROM employees
    GROUP BY department_id
) oldest_dates ON e.department_id = oldest_dates.department_id AND e.hire_date = oldest_dates.oldest_hire_date;

1(c)
SELECT e.name AS employee_name, e.salary
FROM employees e
INNER JOIN (
    SELECT department_id, AVG(salary) AS avg_salary
    FROM employees
    GROUP BY department_id
) dept_avg ON e.department_id = dept_avg.department_id
WHERE e.salary > dept_avg.avg_salary;

